{"version":3,"sources":["store/actions/actiontypes.js","API.js","Components/Main/Navigation.js","store/actions/userAction.js","Components/Auth/AuthForm.js","Components/Auth/Alert.js","Components/Auth/Registration.js","Components/Auth/Login.js","Components/Profile/Tasks/TasksForm/AddTaskForm.js","Components/Profile/Tasks/Tasks.js","Components/Profile/Tasks/TasksForm/SelectOption.js","Components/Profile/Tasks/TasksForm/SendTaskForm.js","Components/Profile/Tasks/TasksForm/PopupButton.js","Components/Profile/Tasks/TasksList.js","Components/Profile/Profile.js","Components/Main/Main.js","App.js","serviceWorker.js","store/reducers/userReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["ADD_TASK","API","login","password","usersAccounts","JSON","parse","localStorage","getItem","userPayload","find","account","setItem","stringify","isUserSignedIn","accountsPayload","accounts","item","newUser","id","uuidv4","tasks","receivedTasks","push","task","user","newTask","date","Date","authorId","unshift","elementIndex","map","e","indexOf","currentUser","filter","receiver","author","foundUser","authorName","removeItem","taskElementIndex","connect","state","loginStatus","userReducer","userLogout","dispatch","window","confirm","closeCurrentSession","type","className","to","onClick","AuthForm","onSubmit","useState","setLogin","setPassword","preventDefault","required","name","value","onChange","target","htmlFor","Alert","text","userRegistration","register","alertWarn","setAlertWarn","alertSuccesful","setAlertSuccesful","useEffect","timeout","setTimeout","clearTimeout","style","textAlign","color","fontWeight","fontStyle","userLogin","payload","history","alert","AddTaskForm","setTask","updateTask","onDelete","label","setTaskId","key","moment","fromNow","onEdit","defaultValue","setReceiver","users","userNames","disabled","sendTask","PopupButton","trigger","position","addTask","deleteTask","deleteReceivedTask","App","this","props","restoreSession","path","component","Navigation","exact","Main","Registration","Login","Profile","PureComponent","Boolean","location","hostname","match","initialState","action","ids","combineReducers","store","createStore","rootReducers","applyMiddleware","thunk","application","basename","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6f3a3282.chunk.js","sourcesContent":["export const USER_LOGIN = \"AUTH/USER_LOGIN\";\nexport const USER_LOGOUT = \"AUTH/USER_LOGOUT\";\nexport const NEW_USER = \"AUTH/NEW_USER\";\nexport const ADD_TASK = \"PROFILE/ADD_TASK\";\nexport const DELETE_TASK = \"PROFILE/DELETE_TASK\";\nexport const UPDATE_TASK = \"PROFILE/UPDATE_TASK\";\nexport const SEND_TASK = \"PROFILE/SEND_TASK\";\nexport const DELETE_RECEIVED_TASK = \"PROFILE/DELETE_RECEIVED_TASK\";\n","import { v4 as uuidv4 } from \"uuid\";\n\nclass API {\n  static login({ login, password }) {\n    const usersAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\n    const userPayload =\n      usersAccounts &&\n      usersAccounts.find(\n        account => account.login === login && account.password === password\n      );\n    if (userPayload) {\n      localStorage.setItem(\"currentUser\", JSON.stringify(userPayload));\n      localStorage.setItem(\"logged\", true);\n      return userPayload;\n    } else {\n      return false;\n    }\n  }\n\n  static restoreSession() {\n    const isUserSignedIn = JSON.parse(localStorage.getItem(\"currentUser\"));\n    if (isUserSignedIn) {\n      return isUserSignedIn;\n    }\n    return null;\n  }\n\n  static register({ login, password }) {\n    const accountsPayload = localStorage.getItem(\"accounts\");\n    const accounts = accountsPayload ? JSON.parse(accountsPayload) : [];\n    const existUserName =\n      accounts && accounts.find(item => item.login === login);\n    if (existUserName) {\n      return false;\n    }\n    const newUser = {\n      id: uuidv4(),\n      login,\n      password,\n      tasks: [],\n      receivedTasks: []\n    };\n    accounts.push(newUser);\n    localStorage.setItem(\"accounts\", JSON.stringify(accounts));\n    return true;\n  }\n\n  static addTask(task) {\n    // Saving current user\n    const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n    const newTask = {\n      id: uuidv4(),\n      task,\n      date: new Date(),\n      authorId: user.id\n    };\n    user.tasks.unshift(newTask);\n    localStorage.setItem(\"currentUser\", JSON.stringify(user));\n\n    // Update tasks in accounts storage\n    const accounts = JSON.parse(localStorage.getItem(\"accounts\"));\n    const ids = accounts.map(e => e.id);\n    const elementIndex = ids.indexOf(user.id);\n    if (elementIndex !== -1) {\n      accounts[elementIndex] = user;\n    }\n    localStorage.setItem(\"accounts\", JSON.stringify(accounts));\n    return newTask;\n  }\n\n  static deleteTask(id) {\n    //Update current storage\n    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n    currentUser.tasks = currentUser.tasks.filter(item => item.id !== id);\n    localStorage.setItem(\"currentUser\", JSON.stringify(currentUser));\n\n    // Update main storage\n    const accounts = JSON.parse(localStorage.getItem(\"accounts\"));\n    const ids = accounts.map(e => e.id);\n    const elementIndex = ids.indexOf(currentUser.id);\n    if (elementIndex !== -1) {\n      accounts[elementIndex] = currentUser;\n    }\n    localStorage.setItem(\"accounts\", JSON.stringify(accounts));\n  }\n\n  static deleteReceivedTask(id) {\n    //Update current storage\n    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n    currentUser.receivedTasks = currentUser.receivedTasks.filter(\n      item => item.id !== id\n    );\n    localStorage.setItem(\"currentUser\", JSON.stringify(currentUser));\n    // Update main storage\n    const accounts = JSON.parse(localStorage.getItem(\"accounts\"));\n    const ids = accounts.map(e => e.id);\n    const elementIndex = ids.indexOf(currentUser.id);\n    if (elementIndex !== -1) {\n      accounts[elementIndex] = currentUser;\n    }\n    localStorage.setItem(\"accounts\", JSON.stringify(accounts));\n  }\n\n  static sendTask(task, receiver) {\n    const accounts = JSON.parse(localStorage.getItem(\"accounts\"));\n    const author = JSON.parse(localStorage.getItem(\"currentUser\"));\n    // Send to user [foundUser]\n    const foundUser = accounts.find(item => item.login === receiver);\n    const newTask = {\n      id: uuidv4(),\n      task,\n      authorName: author.login,\n      authorId: author.id,\n      date: new Date()\n    };\n    foundUser.receivedTasks.unshift(newTask);\n    // Update accounts info\n    const ids = accounts.map(e => e.id);\n    const elementIndex = ids.indexOf(foundUser.id);\n    if (elementIndex !== -1) {\n      accounts[elementIndex] = foundUser;\n    }\n    localStorage.setItem(\"accounts\", JSON.stringify(accounts));\n  }\n\n  static closeCurrentSession() {\n    localStorage.removeItem(\"logged\");\n    localStorage.removeItem(\"currentUser\");\n  }\n\n  static updateTask(id, task) {\n    // Update current user\n    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n    const tasks = currentUser.tasks;\n    const taskIds = tasks.map(e => e.id);\n\n    const taskElementIndex = taskIds.indexOf(id);\n    if (taskElementIndex !== -1) {\n      tasks[taskElementIndex] = { id, task, date: new Date() };\n    }\n    localStorage.setItem(\"currentUser\", JSON.stringify(currentUser));\n\n    // Update tasks in accounts storage\n    const accounts = JSON.parse(localStorage.getItem(\"accounts\"));\n    const ids = accounts.map(e => e.id);\n    const elementIndex = ids.indexOf(currentUser.id);\n    if (elementIndex !== -1) {\n      accounts[elementIndex] = currentUser;\n    }\n    localStorage.setItem(\"accounts\", JSON.stringify(accounts));\n  }\n}\n\nexport default API;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { userLogout } from \"../../store/actions/userAction\";\n\nconst Navigation = ({ userLogout, loginStatus }) => {\n  return (\n    <>\n      <nav>\n        <div className=\"nav-wrapper\">\n          <Link to=\"/\" className=\"brand-logo center\">\n            task-manager-app\n          </Link>\n          <ul id=\"nav-mobile\" className=\"right\">\n            {loginStatus && (\n              <li>\n                <Link to=\"/profile\">Profile</Link>{\" \"}\n              </li>\n            )}\n            {!loginStatus && (\n              <li>\n                <Link to=\"/register\">Registration</Link>{\" \"}\n              </li>\n            )}\n            {loginStatus ? (\n              <li>\n                <Link to=\"/profile\" onClick={userLogout}>\n                  Log Out\n                </Link>\n              </li>\n            ) : (\n              <li>\n                <Link to=\"/login\">Login</Link>{\" \"}\n              </li>\n            )}\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  loginStatus: state.userReducer.loginStatus\n});\n\nexport default connect(mapStateToProps, { userLogout })(Navigation);\n","import {\n  USER_LOGIN,\n  USER_LOGOUT,\n  ADD_TASK,\n  DELETE_TASK,\n  UPDATE_TASK,\n  DELETE_RECEIVED_TASK\n} from \"./actiontypes\";\nimport API from \"../../API\";\n\nexport const userLogin = ({ login, password }) => dispatch => {\n  const user = API.login({ login, password });\n  if (user) {\n    dispatch({\n      type: USER_LOGIN,\n      payload: user\n    });\n    return true;\n  } else return false;\n};\n\nexport const userLogout = () => dispatch => {\n  if (window.confirm(\"Want log out?\")) {\n    API.closeCurrentSession();\n    dispatch({\n      type: USER_LOGOUT\n    });\n  } else return false;\n};\n\nexport const userRegistration = ({ login, password }) => dispatch => {\n  const registrationProcess = API.register({ login, password });\n  if (registrationProcess) {\n    return true;\n  } else return false;\n};\n\nexport const restoreSession = () => dispatch => {\n  const user = API.restoreSession();\n  if (user) {\n    dispatch({\n      type: USER_LOGIN,\n      payload: user\n    });\n  }\n};\n\nexport const addTask = task => dispatch => {\n  const newTask = API.addTask(task);\n  dispatch({\n    type: ADD_TASK,\n    payload: newTask\n  });\n};\n\nexport const deleteTask = id => dispatch => {\n  API.deleteTask(id);\n  dispatch({\n    type: DELETE_TASK,\n    payload: id\n  });\n};\n\nexport const deleteReceivedTask = id => dispatch => {\n  API.deleteReceivedTask(id);\n  dispatch({\n    type: DELETE_RECEIVED_TASK,\n    payload: id\n  });\n};\n\nexport const sendTask = (task, receiver) => dispatch => {\n  API.sendTask(task, receiver);\n};\n\nexport const updateTask = (id, task) => dispatch => {\n  API.updateTask(id, task);\n  dispatch({\n    type: UPDATE_TASK,\n    payload: {\n      id,\n      task\n    }\n  });\n};\n","import React, { useState } from \"react\";\n\nconst AuthForm = ({ onSubmit }) => {\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        onSubmit({ login, password });\n      }}\n      className=\"col s12\"\n    >\n      <div className=\"input-field col s12\">\n        <input\n          required\n          type=\"text\"\n          name=\"user\"\n          value={login}\n          onChange={e => setLogin(e.target.value)}\n        />\n        <label htmlFor=\"password\">Login</label>\n      </div>\n      <div className=\"input-field col s12\">\n        <input\n          required\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n        <label htmlFor=\"password\">Password</label>\n      </div>\n      <button type=\"submit\" className=\"btn\">\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\n\nconst Alert = ({ text, type }) => {\n  return <div className={type}>{text}</div>;\n};\n\nexport default Alert;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthForm from \"./AuthForm\";\nimport Alert from \"./Alert\";\nimport { connect } from \"react-redux\";\nimport { userRegistration } from \"../../store/actions/userAction\";\nimport { Link } from \"react-router-dom\";\n\nconst Registration = ({ loginStatus, userRegistration }) => {\n  const [alertWarn, setAlertWarn] = useState(false);\n\n  const [alertSuccesful, setAlertSuccesful] = useState(false);\n\n  useEffect(() => {\n    let timeout = setTimeout(() => setAlertWarn(false), 3000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [alertWarn]);\n\n  const onSubmitRegister = ({ login, password }) => {\n    const registerResult = userRegistration({ login, password });\n    if (registerResult) {\n      setAlertSuccesful(true);\n    } else {\n      setAlertWarn(true);\n    }\n  };\n  return (\n    <>\n      <div className=\"row container\">\n        {alertWarn && (\n          <div className=\"col s12\">\n            <Alert\n              type=\"alert_warn\"\n              text=\"Username is already exists, try another name\"\n            />\n          </div>\n        )}\n        <h5 style={{ textAlign: \"center\", color: \"grey\" }}>Registration</h5>\n        <AuthForm onSubmit={onSubmitRegister} />\n        {alertSuccesful && (\n          <div className=\"col s12 alert_succesful\">\n            <Alert text=\"Account created succesful\" />\n            <Link\n              to=\"/login\"\n              style={{\n                textAlign: \"center\",\n                fontWeight: \"400\",\n                fontStyle: \"italic\"\n              }}\n            >\n              Log In!\n            </Link>\n          </div>\n        )}\n      </div>\n      {loginStatus && <Redirect to=\"/profile\" />}\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  loginStatus: state.userReducer.loginStatus\n});\n\nexport default connect(mapStateToProps, { userRegistration })(Registration);\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthForm from \"./AuthForm\";\nimport Alert from \"./Alert\";\nimport { connect } from \"react-redux\";\nimport { userLogin } from \"../../store/actions/userAction\";\n\nconst Login = ({ loginStatus, userLogin, history }) => {\n  const [alertWarn, setAlertWarn] = useState(false);\n  useEffect(() => {\n    let timeout = setTimeout(() => setAlertWarn(false), 3000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [alertWarn]);\n\n  const onSubmitLogin = ({ login, password }) => {\n    const loginProcess = userLogin({ login, password });\n    if (loginProcess) {\n      alert(\"You have logged succesful\");\n      return history.push(\"/profile\");\n    } else {\n      setAlertWarn(true);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"row container\">\n        {alertWarn && (\n          <div className=\"col s12\">\n            <Alert\n              type=\"alert_warn\"\n              text=\"Username or password isn't correct!\"\n            />\n          </div>\n        )}\n        <h5 style={{ textAlign: \"center\", color: \"grey\" }}>Login</h5>\n        <AuthForm onSubmit={onSubmitLogin} />\n      </div>\n      {loginStatus && <Redirect to=\"/profile\" />}\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  loginStatus: state.userReducer.loginStatus\n});\n\nexport default connect(mapStateToProps, { userLogin })(Login);\n","import React, { useState } from \"react\";\n\nconst AddTaskForm = ({ onSubmit }) => {\n  const [task, setTask] = useState(\"\");\n  return (\n    <>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          onSubmit({ task });\n          setTask('')\n        }}\n        className=\"col s12\"\n      >\n        <div className=\"input-field col s12\">\n          <input\n            onChange={e => setTask(e.target.value)}\n            type=\"text\"\n            value={task}\n            required\n          />\n          <label htmlFor=\"text\">Add task</label>\n        </div>\n        <button type=\"submit\" className=\"btn\">\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default AddTaskForm;\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { updateTask } from \"../../../store/actions/userAction\";\nimport { connect } from \"react-redux\";\n\nconst Tasks = ({ onDelete, tasks, label, updateTask }) => {\n  const [id, setTaskId] = useState(null);\n  const [task, setTask] = useState(\"\");\n\n  const onEdit = () => {\n    if (task !== \"\") {\n      updateTask(id, task);\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <div className=\"col s6\">\n      <h5 style={{ textAlign: \"center\", color: \"grey\" }}>{label}</h5>\n      <div className=\"collection\">\n        {tasks &&\n          tasks.map(user => (\n            <li className=\"collection-item\" key={user.id}>\n              {user.task}{\" \"}\n              {user.authorName && (\n                <>\n                  <br />\n                  <small>\n                    from{\" \"}\n                    <span style={{ color: \"lightcoral\" }}>\n                      {user.authorName}\n                    </span>\n                  </small>\n                </>\n              )}\n              <br />\n              <small>{moment(user.date).fromNow()}</small>\n              <i\n                onClick={() => onDelete(user.id)}\n                className=\"material-icons trashcan\"\n              >\n                delete_forever\n              </i>\n              {!user.authorName && (\n                <i\n                  onClick={() => {\n                    setTaskId(id === null ? user.id : null);\n                  }}\n                  className=\"material-icons edit\"\n                >\n                  edit\n                </i>\n              )}\n              {id === user.id && (\n                <form\n                  onSubmit={e => {\n                    e.preventDefault();\n                    setTaskId(null);\n                    onEdit();\n                  }}\n                >\n                  <input\n                    type=\"text\"\n                    onChange={e => setTask(e.target.value)}\n                    defaultValue={user.task}\n                  />\n                  <button\n                    type=\"submit\"\n                    className=\"waves-effect waves-light btn-small\"\n                  >\n                    Confirm changes\n                  </button>\n                </form>\n              )}\n            </li>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { updateTask })(Tasks);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst SelectOption = ({ currentUser, setReceiver, receiver }) => {\n  const users = JSON.parse(localStorage.getItem(\"accounts\"));\n  const userNames =\n    users &&\n    users\n      .filter(item => item.id !== currentUser.id)\n      .map(item => <option key={item.id}>{item.login}</option>);\n  return (\n    <div>\n      <select\n        className=\"browser-default input-field\"\n        onChange={e => {\n          setReceiver(e.target.value);\n        }}\n        value={receiver}\n      >\n        <option disabled value=\"select\">\n          select user\n        </option>\n        {userNames}\n      </select>\n    </div>\n  );\n};\nconst mapStateToProps = state => ({\n  currentUser: state.userReducer.currentUser\n});\n\nexport default connect(mapStateToProps, null)(SelectOption);\n","import React, { useState } from \"react\";\nimport SelectOption from \"./SelectOption\";\nimport { connect } from \"react-redux\";\nimport { sendTask } from \"../../../../store/actions/userAction\";\n\nconst SendTaskForm = ({ sendTask, currentUser }) => {\n  const [task, setTask] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"select\");\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (receiver !== \"select\") {\n      sendTask(task, receiver);\n      alert(`Task have been sent to ${receiver} succesful!`);\n      setTask(\"\");\n    } else {\n      alert(\"You cant send tasks because you didn't select the user\");\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"col s12 container\">\n        <div className=\"input-field col s12\">\n          <input\n            onChange={e => setTask(e.target.value)}\n            type=\"text\"\n            required\n            value={task}\n          />\n          <label htmlFor=\"task\">Enter text</label>\n          <SelectOption setReceiver={setReceiver} receiver={receiver} />\n          <button type=\"submit\" className=\"btn\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  currentUser: state.userReducer.currentUser\n});\n\nexport default connect(mapStateToProps, { sendTask })(SendTaskForm);\n","import React from \"react\";\nimport Popup from \"reactjs-popup\";\nimport SendTaskForm from \"./SendTaskForm\";\n\nconst PopupButton = () => {\n  return (\n    <div className=\"container\">\n      <Popup\n        trigger={<button className=\"btn popup_button\"> Send task</button>}\n        position=\"right top\"\n      >\n        <div>\n          <SendTaskForm />\n        </div>\n      </Popup>\n    </div>\n  );\n};\n\nexport default PopupButton;\n","import React from \"react\";\nimport AddTaskForm from \"./TasksForm/AddTaskForm\";\nimport Tasks from \"./Tasks\";\nimport PopupButton from \"./TasksForm/PopupButton\";\nimport { connect } from \"react-redux\";\nimport {\n  addTask,\n  deleteTask,\n  deleteReceivedTask\n} from \"../../../store/actions/userAction\";\n\nconst TasksList = ({\n  addTask,\n  deleteTask,\n  deleteReceivedTask,\n  tasks,\n  receivedTasks\n}) => {\n  const onSubmit = ({ task }) => {\n    addTask(task);\n  };\n\n  const onDeleteMyTask = id => {\n    deleteTask(id);\n  };\n\n  const onDeleteReceivedTask = id => {\n    deleteReceivedTask(id);\n  };\n\n  return (\n    <>\n      <div className=\"row container\">\n        <Tasks onDelete={onDeleteMyTask} tasks={tasks} label=\"My Tasks\" />\n        <Tasks\n          onDelete={onDeleteReceivedTask}\n          label=\"Received Tasks\"\n          tasks={receivedTasks}\n          author={receivedTasks.author}\n          date={receivedTasks.date}\n        />\n        <AddTaskForm onSubmit={onSubmit} />\n      </div>\n      <PopupButton />\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  tasks: state.userReducer.tasks,\n  receivedTasks: state.userReducer.receivedTasks\n});\n\nexport default connect(mapStateToProps, {\n  addTask,\n  deleteTask,\n  deleteReceivedTask\n})(TasksList);\n","import React from \"react\";\nimport Tasks from \"./Tasks/TasksList\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst Profile = ({ currentUser, loginStatus }) => {\n  return (\n    <>\n      <div className=\"container\">\n        <h4 style={{ textAlign: \"center\", color: \"grey\" }}>\n          Welcome home{\" \"}\n          <span style={{ color: \"lightcoral\" }}>{currentUser.login}</span>!\n        </h4>\n        <Tasks />\n      </div>\n      {!loginStatus && <Redirect to=\"/login\" />}\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  currentUser: state.userReducer.currentUser,\n  loginStatus: state.userReducer.loginStatus\n});\n\nexport default connect(mapStateToProps, null)(Profile);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst Main = ({ loginStatus }) => {\n  return (\n    <>\n      {loginStatus ? (\n        <Link to=\"/profile\">\n          <h1 style={{ color: \"grey\", textAlign: \"center\" }}>\n            open task manager\n          </h1>\n        </Link>\n      ) : (\n        <Link to=\"/login\">\n          <h1 style={{ color: \"grey\", textAlign: \"center\" }}>\n            Log In to see your profile!\n          </h1>\n        </Link>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  loginStatus: state.userReducer.loginStatus\n});\n\nexport default connect(mapStateToProps, null)(Main);\n","import React, { PureComponent } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Navigation from \"./Components/Main/Navigation\";\nimport Registration from \"./Components/Auth/Registration\";\nimport Login from \"./Components/Auth/Login\";\nimport Profile from \"./Components/Profile/Profile\";\nimport Main from \"./Components/Main/Main\";\nimport { restoreSession } from \"./store/actions/userAction\";\nimport { connect } from \"react-redux\";\n\nclass App extends PureComponent {\n  componentDidMount() {\n    this.props.restoreSession();\n  }\n  render() {\n    return (\n      <>\n        <Route path=\"/\" component={Navigation} />\n        <Route exact path=\"/\" component={Main} />\n        <Route path=\"/register\" component={Registration} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/profile/\" component={Profile} />\n      </>\n    );\n  }\n}\n\nexport default connect(null, { restoreSession })(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  USER_LOGOUT,\n  USER_LOGIN,\n  ADD_TASK,\n  DELETE_TASK,\n  UPDATE_TASK,\n  DELETE_RECEIVED_TASK\n} from \"../actions/actiontypes\";\n\nconst initialState = {\n  currentUser: {},\n  loginStatus: false,\n  tasks: [],\n  receivedTasks: []\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_LOGIN:\n      return {\n        ...state,\n        currentUser: action.payload,\n        loginStatus: true,\n        tasks: action.payload.tasks,\n        receivedTasks: action.payload.receivedTasks\n      };\n    case USER_LOGOUT:\n      return initialState;\n    case ADD_TASK:\n      return {\n        ...state,\n        tasks: [action.payload, ...state.tasks]\n      };\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter(item => item.id !== action.payload)\n      };\n    case DELETE_RECEIVED_TASK:\n      return {\n        ...state,\n        receivedTasks: state.receivedTasks.filter(\n          item => item.id !== action.payload\n        )\n      };\n    case UPDATE_TASK: {\n      const tasks = [...state.tasks];\n      const ids = tasks.map(e => e.id);\n      const elementIndex = ids.indexOf(action.payload.id);\n      if (elementIndex !== -1) {\n        tasks[elementIndex] = action.payload;\n      }\n      return {\n        ...state,\n        tasks\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\nimport userReducer from \"./userReducer\";\n\nexport default combineReducers({\n  userReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducers from \"./reducers/index\";\n\nconst initialState = {};\nconst store = createStore(rootReducers, initialState, applyMiddleware(thunk));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter,HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nconst application = (\n  <Provider store={store}>\n    <HashRouter basename=\"/auth-task-app\">\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(application, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}